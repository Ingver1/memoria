from collections.abc import Callable
from typing import Any, TypeVar

F = TypeVar("F", bound=Callable[..., Any])

class Context: ...
class CallbackParam: ...

class Typer:
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def command(self, *args: Any, **kwargs: Any) -> Callable[[F], F]: ...
    def __call__(self, *args: Any, **kwargs: Any) -> Any: ...

class BadParameter(Exception): ...

def Argument(*args: Any, **kwargs: Any) -> Any: ...
def Option(*args: Any, **kwargs: Any) -> Any: ...
